---
import type { CollectionEntry } from "astro:content";
import type { GetStaticPaths } from "astro";
import { avatars, posts } from "@/utils/meta.server";
import { getEntry, render } from "astro:content";

// Layouts
import PostLayout from "@/layouts/PostLayout.astro";

// Components
import { Image } from "astro:assets";
import ExtLink from "@/components/ExtLink.astro";

// Injects
const { post } = Astro.props;

// Contants
const author: CollectionEntry<"authors"> = await getEntry(
  "authors",
  post.data.author.id.toLowerCase()
)!;
const { Content, remarkPluginFrontmatter } = await render(post);

// Export path function
export const getStaticPaths = (() =>
  posts.map((v: CollectionEntry<"posts">) => {
    // Validate slug
    if (!/^(?!page$)[\da-zA-Z-]+$/.test(v.data.slug)) {
      throw Error("Slug invalid: " + v.data.slug);
    }

    return {
      params: { slug: v.data.slug },
      props: { post: v },
    };
  })) satisfies GetStaticPaths;
---

<PostLayout
  menuUrl="/posts"
  title={post.data.title}
  date={post.data.published_at}
  tags={post.data.tags}
  word_count={remarkPluginFrontmatter.word_count}>
  <div class="flex items-center my-4">
    {
      author.data.avatar.startsWith("@avatars/") ? (
        <Image
          alt="avatar"
          class="h-[60px] rounded-full transition-transform w-[60px] hover:scale-110"
          src={avatars[
            author.data.avatar.replace(/^@avatars/, "/src/assets/avatars")
          ]()}
        />
      ) : (
        <Image
          alt="avatar"
          class="h-[60px] rounded-full transition-transform w-[60px] hover:scale-110"
          height="200"
          src={author.data.avatar}
          width="200"
        />
      )
    }
    <div class="flex flex-col ml-4">
      <h1 class="font-bold">{author.data.name}</h1>
      <p class="text-sm text-neutral-400">{author.data.intro}</p>
      <div class="flex gap-2 items-center mt-1 text-sm">
        {
          author.data.urls?.map(
            ({ name, url }: { name: string; url: string }) => (
              <ExtLink href={url}>{name}</ExtLink>
            )
          )
        }
      </div>
    </div>
  </div>
  <div
    class="border-dashed border-b-2 border-neutral-800 font-bold text-center text-neutral-800 text-sm select-none">
    Start of Post
  </div>
  <article class="my-8">
    <Content />
  </article>
  <div
    class="border-dashed border-neutral-800 border-t-2 font-bold mb-auto text-center text-neutral-800 text-sm select-none">
    End of Post
  </div>
</PostLayout>
