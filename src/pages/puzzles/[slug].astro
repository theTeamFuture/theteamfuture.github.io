---
import type { CollectionEntry } from "astro:content";
import type { GetStaticPaths } from "astro";
import { puzzles } from "@/utils/meta.server";
import { render } from "astro:content";

// Layouts
import PostLayout from "@/layouts/PostLayout.astro";

// Components
import { Icon } from "astro-icon/components";

// Injects
const { puzzle } = Astro.props;

// Contants
const { Content } = await render(puzzle);

// Export path function
export const getStaticPaths = (() =>
  puzzles.map((v: CollectionEntry<"puzzles">) => {
    // Validate slug
    if (!/^(?!page$)[\da-zA-Z-]+$/.test(v.data.slug)) {
      throw Error("Slug invalid: " + v.data.slug);
    }

    return {
      params: { slug: v.data.slug },
      props: { puzzle: v },
    };
  })) satisfies GetStaticPaths;
---

<PostLayout
  menuUrl="/puzzles"
  title={puzzle.data.title}
  date={puzzle.data.published_at}>
  {
    puzzle.data.report ? (
      <a
        class="flex font-bold gap-4 items-center justify-center my-8 select-none self-center text-2xl text-neutral-700 hover:text-neutral-400"
        href={puzzle.data.report}>
        <Icon class="text-5xl" name="mdi:box-variant" />
        <span>Solved</span>
      </a>
    ) : (
      <div class="flex gap-4 items-center justify-center my-8 select-none">
        <Icon class="text-5xl text-neutral-500" name="mdi:box-variant-closed" />
        <p class="font-bold text-2xl text-neutral-500">Mystery</p>
      </div>
    )
  }
  <div
    class="border-dashed border-b-2 border-neutral-800 font-bold text-center text-neutral-800 text-sm select-none">
    Start of Puzzle
  </div>
  <article class="my-8">
    <Content />
  </article>
  <div
    class="border-dashed border-neutral-800 border-t-2 font-bold mb-auto text-center text-neutral-800 text-sm select-none">
    End of Puzzle
  </div>
</PostLayout>
